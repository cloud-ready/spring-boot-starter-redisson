
branches:
  only:
    #- master # do nothing on master branch
    - develop # snapshots on develop branch
    - /^feature\/.*$/ # build and test on feature branches
    - /^hotfix\/.*$/ # release on hotfix branches
    - /^release\/.*$/ # release on release branches
    - /^support\/.*$/ # release on support branches
    #- /^v\d+\.\d+(\.\d+)?(-\S*)?/ # build and publish a github release (can skip tests here) or do nothing on version tags

# build phase should be off as,
# by default, itâ€™s set to MSBuild mode for automatic discovery and building of .NET Core projects (see the section below).
build: off

cache:
  - "$HOME/.cache"
  - "$HOME/.gradle"
  - "$HOME/.m2/repository"
  - "$HOME/.m2/wrapper"
  - "$HOME/.sonar/cache"

environment:
  #DEBIAN_FRONTEND: noninteractive

  CI_OPT_GPG_PASSPHRASE:
    secure: 9W3TKuaDpCwfEF8yNbbbNCaelmjnZqHdxUqfITdKTWM=
#  CI_OPT_OSSRH_DOCKER_REGISTRY_PASS:
#    secure:
#  CI_OPT_OSSRH_DOCKER_REGISTRY_USER:
#    secure:
  CI_OPT_OSSRH_GIT_AUTH_TOKEN:
    secure: b8+kCKw7dSSIWSmdlsRzDKz9m5xU3BO1uBzd4voLqDmbGn+pVQxOQzpEzqNqw0xq
  CI_OPT_OSSRH_MVNSITE_PASSWORD:
    secure: 5a/nGFeI/YGReZ+YZrz9xWytrHl8OotByWS/L6A/Gos=
  CI_OPT_OSSRH_MVNSITE_USERNAME:
    secure: Yd4Z2S34bY3NQnWMP/GflQ==
  CI_OPT_OSSRH_NEXUS2_PASS:
    secure: EadWkxS83ouKd0flOB6UNQ==
  CI_OPT_OSSRH_NEXUS2_USER:
    secure: WHUUaDWLfxrqrBMF0gFnwg==
  CI_OPT_OSSRH_SONAR_LOGIN:
    secure: W4k/mwIb6WWM/XKvncWlDEvlfn+dz88sB8qlbYsL7nF41+9BADm/uYgiYt5SPoiJ

  MAVEN_SKIP_RC: true

  RSYNC_PASSWORD:
    secure: u1zNgVE8L//j/YW6mzcKbIgIegoqSYKPAfYAiMWEHds=

image: Ubuntu1804

#init:

install:
  - ls -ahl;
  - sh: |
      sudo apt-get update > /dev/null;
      sudo apt-get install -yq --no-install-suggests --no-install-recommends aria2 gnupg2 graphviz openssl rsync sshpass whois > /dev/null;
  - whois $(curl ipinfo.io/ip);
  # Settings -> Environment -> Environment variables -> Add variable
  # CI_OPT_ORIGIN_REPO_SLUG
  - sh: |
      export CI_OPT_MVN_DEPLOY_PUBLISH_SEGREGATION="false";
      source circ.sh;
  - sh: |
      # make AppVeyor's JDK path (/usr/lib/jvm/java-11-openjdk-amd64) compatible with travis-ci's style (/usr/lib/jvm/java-11-openjdk) to make toolchains.xml valid
      if [[ -d /usr/lib/jvm/java-8-openjdk-amd64 ]]; then sudo ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/java-8-openjdk; fi;
      if [[ -d /usr/lib/jvm/java-11-openjdk-amd64 ]]; then sudo ln -s /usr/lib/jvm/java-11-openjdk-amd64 /usr/lib/jvm/java-11-openjdk; fi;
      export JAVA_HOME="/usr/lib/jvm/java-8-openjdk";
      export PATH="$JAVA_HOME:$PATH";
#  - sh: |
#      mkdir -p /home/appveyor/.m2/repository;
#      sshpass -p "${RSYNC_PASSWORD}" rsync -r -a -v -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" rsync_user@infra.top:/restricted/rsync_user/m2_repository/ /home/appveyor/.m2/repository > /dev/null;
#      du -sh /home/appveyor/.m2/repository;
#      ls -ahl /home/appveyor/.m2/repository/;
#  - sh: |
#      export MAVEN_GLOBAL_SETTINGS="--global-settings ${SETTINGS_GLOBAL_XML}";
  - sh: |
      rm -rf ~/.m2/repository/top/infra/maven/maven-build-extension;
      if [[ -z "${MAVEN_OPTS}" ]]; then export MAVEN_OPTS="-XX:+UseParallelGC -Dprofile=title -DprofileFormat=JSON,HTML"; fi;
      ls -ahl ~/.m2;
      ./mvnw ${MAVEN_GLOBAL_SETTINGS} -version;

services:
  - docker

# see: https://www.appveyor.com/docs/build-environment/
#stack: node 9, jdk 8, jdk 11
stack: jdk 8

test_script:
  - sh: |
      if [[ "${APPVEYOR_ENABLED}" == "true" ]]; then
        time CI_OPT_SONAR="true" ./mvnw ${MAVEN_GLOBAL_SETTINGS} -e -ntp -U clean deploy;
        if type -p column > /dev/null; then find .mvn/profilerReport -name "*.json" | xargs cat | jq -r '.projects[]|"module:", .project, "plugins", (.mojos[]|[.mojo,.time]|@tsv)' | column -t; fi;
        time CI_OPT_MAVEN_CLEAN_SKIP="true" ./mvnw ${MAVEN_GLOBAL_SETTINGS} -e -ntp site-deploy;
        if type -p column > /dev/null; then find .mvn/profilerReport -name "*.json" | xargs cat | jq -r '.projects[]|"module:", .project, "plugins", (.mojos[]|[.mojo,.time]|@tsv)' | column -t; fi;
      fi;
