
branches:
  only:
    #- master # do nothing on master branch
    - develop # snapshots on develop branch
    - /^feature\/.*$/ # build and test on feature branches
    - /^hotfix\/.*$/ # release on hotfix branches
    - /^release\/.*$/ # release on release branches
    - /^support\/.*$/ # release on support branches
    #- /^v\d+\.\d+(\.\d+)?(-\S*)?/ # build and publish a github release (can skip tests here) or do nothing on version tags

# build phase should be off as,
# by default, itâ€™s set to MSBuild mode for automatic discovery and building of .NET Core projects (see the section below).
build: off

cache:
  - "$HOME/.cache"
  - "$HOME/.gradle"
  - "$HOME/.m2/repository"
  - "$HOME/.m2/wrapper"
  - "$HOME/.sonar/cache"

environment:
  APPVEYOR_ENABLED: true

  CI_OPT_GIT_PREFIX: https://github.com
  CI_OPT_GITHUB_SITE_PUBLISH: false
  CI_OPT_GPG_KEYNAME: 59DBF10E
  CI_OPT_GPG_PASSPHRASE:
    secure: 9W3TKuaDpCwfEF8yNbbbNCaelmjnZqHdxUqfITdKTWM=
  CI_OPT_INFRASTRUCTURE: opensource
  CI_OPT_MAVEN_EFFECTIVE_POM: true
  CI_OPT_OPENSOURCE_GIT_AUTH_TOKEN:
    secure: b8+kCKw7dSSIWSmdlsRzDKz9m5xU3BO1uBzd4voLqDmbGn+pVQxOQzpEzqNqw0xq
  CI_OPT_OPENSOURCE_MVNSITE_PASSWORD:
    secure: 5a/nGFeI/YGReZ+YZrz9xWytrHl8OotByWS/L6A/Gos=
  CI_OPT_OPENSOURCE_MVNSITE_USERNAME:
    secure: Yd4Z2S34bY3NQnWMP/GflQ==
  CI_OPT_ORIGIN_REPO_SLUG: cloud-ready/spring-boot-starter-redisson
  CI_OPT_MAVEN_CENTRAL_PASS:
    secure: EadWkxS83ouKd0flOB6UNQ==
  CI_OPT_MAVEN_CENTRAL_USER:
    secure: WHUUaDWLfxrqrBMF0gFnwg==
  CI_OPT_SITE: true
  CI_OPT_SONAR: true
  CI_OPT_SONAR_LOGIN:
    secure: W4k/mwIb6WWM/XKvncWlDEvlfn+dz88sB8qlbYsL7nF41+9BADm/uYgiYt5SPoiJ
  CI_OPT_SONAR_ORGANIZATION: home1-oss-github

  #DEBIAN_FRONTEND: noninteractive
  MAVEN_SKIP_RC: true

  RSYNC_PASSWORD:
    secure: u1zNgVE8L//j/YW6mzcKbIgIegoqSYKPAfYAiMWEHds=

  SETTINGS_GLOBAL_XML: /home/appveyor/.m2/wrapper/dists/apache-maven-3.6.1-bin/38pn40mp89t5c94bjdbeod370m/apache-maven-3.6.1/conf/settings.xml

image: Ubuntu1804

#init:

install:
  - ls -ahl
  - sh: |
      export CI_OPT_MAVEN_BUILD_OPTS_REPO="${CI_OPT_GIT_PREFIX}/ci-and-cd/maven-build-opts-opensource";
      export CI_OPT_MAVEN_BUILD_OPTS_REPO_REF="master";
      export SETTINGS_GLOBAL_XML_URL="${CI_OPT_MAVEN_BUILD_OPTS_REPO}/raw/${CI_OPT_MAVEN_BUILD_OPTS_REPO_REF}/src/main/maven/settings-global.xml";
  - sh: |
      sudo apt-get update > /dev/null
      sudo apt-get install -yq --no-install-suggests --no-install-recommends aria2 gnupg2 graphviz openssl rsync sshpass whois > /dev/null
  - whois $(curl ipinfo.io/ip)
  - sh: |
      # make AppVeyor's JDK path (/usr/lib/jvm/java-11-openjdk-amd64) compatible with travis-ci's style (/usr/lib/jvm/java-11-openjdk) to make toolchains.xml valid
      if [[ -d /usr/lib/jvm/java-8-openjdk-amd64 ]]; then sudo ln -s /usr/lib/jvm/java-8-openjdk-amd64 /usr/lib/jvm/java-8-openjdk; fi
      if [[ -d /usr/lib/jvm/java-11-openjdk-amd64 ]]; then sudo ln -s /usr/lib/jvm/java-11-openjdk-amd64 /usr/lib/jvm/java-11-openjdk; fi
      export JAVA_HOME=/usr/lib/jvm/java-8-openjdk
      export PATH=$JAVA_HOME:$PATH
#  #  A host on cloud
#  #sudo adduser --home /restricted/rsync_user rsync_user
#  #
#  #  Add these lines at the end of /etc/ssh/sshd_config
#  #Match User rsync_user
#  #        PasswordAuthentication yes
#  #
#  #  Restart sshd
#  #sudo service sshd restart
#  #
#  #  Developer's host
#  #brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb
#  #sshpass -p "${RSYNC_PASSWORD}" ssh -o PreferredAuthentications=password -o PubkeyAuthentication=no rsync_user@nexus3.infra.top
#  #./mvnw -Dsettings.localRepository=$(pwd)/.mvn/localRepository clean install sonar:sonar site deploy site-deploy;
#  #sshpass -p "${RSYNC_PASSWORD}" rsync -r -a -v -e ssh --delete $(pwd)/.mvn/localRepository/ rsync_user@infra.top:/restricted/rsync_user/m2_repository
#  #rm -rf  $(pwd)/.mvn/localRepository/*
#  #sshpass -p "${RSYNC_PASSWORD}" rsync -r -a -v -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" rsync_user@infra.top:/restricted/rsync_user/m2_repository/ $(pwd)/.mvn/localRepository
#  - sh: |
#      mkdir -p /home/appveyor/.m2/repository
#      sshpass -p "${RSYNC_PASSWORD}" rsync -r -a -v -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" rsync_user@infra.top:/restricted/rsync_user/m2_repository/ /home/appveyor/.m2/repository > /dev/null
#      du -sh /home/appveyor/.m2/repository
#      ls -ahl /home/appveyor/.m2/repository/
  - sh: |
      ./mvnw -version
      echo "download ${SETTINGS_GLOBAL_XML_URL} to ${SETTINGS_GLOBAL_XML}"
      curl -L "${SETTINGS_GLOBAL_XML_URL}" 2>/dev/null | dd of=${SETTINGS_GLOBAL_XML}
      cat ${SETTINGS_GLOBAL_XML}
      rm -rf ~/.m2/repository/top/infra/maven-build-extension
      rm -f ~/.m2/settings*.xml
      rm -f ~/.m2/toolchains*.xml
      ls -ahl ~/.m2
#  - sh: |
#      unset M2_HOME
#      sudo mkdir -p /opt/maven
#      sudo aria2c --file-allocation=none -c -x 10 -s 10 -m 0 --console-log-level=notice --log-level=notice --summary-interval=0 -d /opt/maven -o apache-maven-3.6.1-bin.zip https://archive.apache.org/dist/maven/maven-3/3.6.1/binaries/apache-maven-3.6.1-bin.zip && sudo unzip /opt/maven/apache-maven-3.6.1-bin.zip -d /opt/maven > /dev/null
#      sudo ln -sfn apache-maven-3.6.1 /opt/maven/latest
#      export M3_HOME=/opt/maven/latest
#      export PATH=$M3_HOME/bin:$PATH
#      echo M3_HOME=$M3_HOME, PATH=$PATH
#  - sh: |
#      sudo mkdir -p /opt/gradle
#      sudo aria2c --file-allocation=none -c -x 10 -s 10 -m 0 --console-log-level=notice --log-level=notice --summary-interval=0 -d /opt/gradle -o gradle-5.2.1-all.zip https://services.gradle.org/distributions/gradle-5.2.1-all.zip && sudo unzip /opt/gradle/gradle-5.2.1-all.zip -d /opt/gradle > /dev/null
#      sudo ln -sfn gradle-5.2.1 /opt/gradle/latest
#      ls -la /opt/gradle
#      ls -la /opt/gradle/latest/
#      export GRADLE_HOME=/opt/gradle/latest
#      export PATH=$GRADLE_HOME/bin:$PATH
#      echo GRADLE_HOME=$GRADLE_HOME, PATH=$PATH

services:
  - docker

# see: https://www.appveyor.com/docs/build-environment/
#stack: node 9, jdk 8, jdk 11
stack: jdk 8

test_script:
  - sh: |
      if [[ "${APPVEYOR_REPO_BRANCH}" =~ ^release/.+ ]] || [[ "${APPVEYOR_REPO_BRANCH}" =~ ^support/.+ ]]; then export CI_OPT_GITHUB_SITE_PUBLISH=true; else export CI_OPT_GITHUB_SITE_PUBLISH=false; fi;
      if [[ "${CI_OPT_GITHUB_SITE_PUBLISH}" == "true" ]]; then
        export CI_OPT_GITHUB_GLOBAL_REPOSITORYOWNER="$(echo ${APPVEYOR_REPO_NAME} | awk -F'/' '{print $1}')";
        export CI_OPT_SITE_PATH_PREFIX="${CI_OPT_GITHUB_GLOBAL_REPOSITORYOWNER}";
      else
        export CI_OPT_SITE_PATH_PREFIX="${APPVEYOR_REPO_NAME}";
      fi;
      if [[ "${APPVEYOR_ENABLED}" == "true" ]]; then
        if [[ "${CI_OPT_GITHUB_SITE_PUBLISH}" == "true" ]]; then
          ./mvnw -e -ntp -U clean install sonar:sonar site deploy site-deploy;
        else
          ./mvnw -e -ntp -U clean install sonar:sonar site deploy site:stage site:stage-deploy;
        fi
      fi
